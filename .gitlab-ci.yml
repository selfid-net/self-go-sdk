default:
  image: golang:1.14.4-buster

stages:
  - pre-test
  - test
  - release

.license-check: &license-check |
  git clone https://${GITHUB_TOKEN}:@github.com/aldgate-ventures/license-finder.git
  source ~/.profile
  license_finder --decisions_file ./license-finder/dependency_decisions.yml

.setup: &setup |
  apt-get update
  apt-get -y install libsodium-dev
  tmpdir=$(mktemp -d)
  curl https://download.joinself.com/olm/libself-olm_0.1.14_amd64.deb -o ${tmpdir}/libself-olm_0.1.14_amd64.deb
  curl https://download.joinself.com/omemo/libself-omemo_0.1.1_amd64.deb -o ${tmpdir}/libself-omemo_0.1.1_amd64.deb
  apt-get -y install ${tmpdir}/libself-olm_0.1.14_amd64.deb
  apt-get -y install ${tmpdir}/libself-omemo_0.1.1_amd64.deb

.new-version: &new-version |
  if [[ $(git tag) == "" ]]; then
    version="0.1.0"
  else
    current_version=$(git ls-remote -q --tags https://${GITHUB_TOKEN}:@github.com/joinself/${CI_PROJECT_NAME} | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')
    case "${CI_COMMIT_DESCRIPTION}" in
      *+bump-major*)
        version=$(semver bump major ${current_version})
        ;;
      *+bump-minor*)
        version=$(semver bump minor ${current_version})
        ;;
      *)
        version=$(semver bump patch ${current_version})
        ;;
    esac
  fi

.git-release: &git-release |
  subject=$(git log -n 1 --format=%s)
  body=$(git log -n 1 --format=%b | grep -E '^\*|^-' | sed 's/^*/-/g') || true

  if [[ -z ${body} ]]; then
    release_notes="- ${subject}"
  else
    release_notes="${body}"
  fi

  git remote set-url origin https://${GITHUB_TOKEN}:@github.com/joinself/${CI_PROJECT_NAME}
  git tag -a ${version} -m "${version}"
  git push origin ${version}
  hub release create -m "${version}" -m "${release_notes}" ${version}

before_script:
  - export SCRIPTS_DIR=$(mktemp -d)
  - git clone -q --depth 1 "${SCRIPTS_REPO}" "${SCRIPTS_DIR}"

license-check:
  stage: pre-test
  image: licensefinder/license_finder
  script:
    - ${SCRIPTS_DIR}/git-setup
    - *license-check
  allow_failure: true
  only:
    - branches

unit-test:
  stage: test
  script:
    - *setup
    - go test -v ./...
  only:
    - branches

release:
  stage: release
  image: eu.gcr.io/principal-oxide-204416/deploy
  script:
    - ${SCRIPTS_DIR}/git-setup
    - *new-version
    - *git-release
    - ${SCRIPTS_DIR}/slack-release-notification -n joinself -v ${version}
  only:
    - master
