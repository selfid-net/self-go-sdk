default:
  image: golang:1.14.4-buster

stages:
  - Test
  - Release

.setup: &setup |
  apt-get update
  apt-get -y install libsodium-dev
  tmpdir=$(mktemp -d)
  curl http://download.selfid.net/olm/libself-olm_0.1.14_amd64.deb -o ${tmpdir}/libself-olm_0.1.14_amd64.deb
  curl http://download.selfid.net/omemo/libself-omemo_0.1.1_amd64.deb -o ${tmpdir}/libself-omemo_0.1.1_amd64.deb
  apt-get -y install ${tmpdir}/libself-olm_0.1.14_amd64.deb
  apt-get -y install ${tmpdir}/libself-omemo_0.1.1_amd64.deb

.new_version: &new_version |
  if [[ $(git tag) == "" ]]; then
    version="0.1.0"
  else
    current_version=$(git ls-remote -q --tags https://${GITHUB_TOKEN}:@github.com/joinself/${CI_PROJECT_NAME} | sort -t / -k 3 -V | grep -v '{}' | tail -n 1 | awk -F / '{print $3}')
    case "${CI_COMMIT_DESCRIPTION}" in
      *+bump-major*)
        version=$(semver bump major ${current_version})
        ;;
      *+bump-minor*)
        version=$(semver bump minor ${current_version})
        ;;
      *)
        version=$(semver bump patch ${current_version})
        ;;
    esac
  fi

.git_release: &git_release |
  subject=$(git log -n 1 --format=%s)
  body=$(git log -n 1 --format=%b | grep -E '^\*|^-' | sed 's/^*/-/g') || true

  if [[ -z ${body} ]]; then
    release_notes="- ${subject}"
  else
    release_notes="${body}"
  fi

  git remote set-url origin https://${GITHUB_TOKEN}:@github.com/joinself/${CI_PROJECT_NAME}
  git tag -a ${version} -m "${version}"
  git push origin ${version}
  hub release create -m "${version}" -m "${release_notes}" ${version}

.slack_notify: &slack_notify |
  if [[ -z ${body} ]]; then
    slack chat send "New release <https://github.com/joinself/${CI_PROJECT_NAME}|${CI_PROJECT_NAME}> <https://github.com/joinself/${CI_PROJECT_NAME}/commits/${version}|${version}>\n\n- ${subject}" '#ci'
  else
    slack chat send "New release <https://github.com/joinself/${CI_PROJECT_NAME}|${CI_PROJECT_NAME}> <https://github.com/joinself/${CI_PROJECT_NAME}/commits/${version}|${version}>\n\n${body}" '#ci'
  fi

before_script:
  - export SCRIPTS_DIR=$(mktemp -d)
  - git clone -q --depth 1 "${SCRIPTS_REPO}" "${SCRIPTS_DIR}"

test:
  stage: Test
  script:
    - *setup
    - go test -v ./...
  only:
    - branches

release:
  stage: Release
  image: aldgateventuresbot/deploy
  script:
    - ${SCRIPTS_DIR}/git-setup
    - *new_version
    - *git_release
    - *slack_notify
  only:
    - master
