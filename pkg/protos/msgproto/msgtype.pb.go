// Copyright 2020 Self Group Ltd. All Rights Reserved.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.3
// source: msgtype.proto

package msgproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgType int32

const (
	MsgType_MSG  MsgType = 0
	MsgType_ACK  MsgType = 1
	MsgType_ERR  MsgType = 2
	MsgType_AUTH MsgType = 3
	MsgType_ACL  MsgType = 4
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0: "MSG",
		1: "ACK",
		2: "ERR",
		3: "AUTH",
		4: "ACL",
	}
	MsgType_value = map[string]int32{
		"MSG":  0,
		"ACK":  1,
		"ERR":  2,
		"AUTH": 3,
		"ACL":  4,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_msgtype_proto_enumTypes[0].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_msgtype_proto_enumTypes[0]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_msgtype_proto_rawDescGZIP(), []int{0}
}

type MsgSubType int32

const (
	MsgSubType_Unknown                    MsgSubType = 0
	MsgSubType_AuthenticationReq          MsgSubType = 1
	MsgSubType_AuthenticationResp         MsgSubType = 2
	MsgSubType_AuthenticationQRResp       MsgSubType = 3
	MsgSubType_AuthenticationDeepLinkResp MsgSubType = 4
	MsgSubType_FactReq                    MsgSubType = 5
	MsgSubType_FactResp                   MsgSubType = 6
	MsgSubType_FactQRResp                 MsgSubType = 7
	MsgSubType_FactDeepLinkResp           MsgSubType = 8
	MsgSubType_EmailSecurityCodeReq       MsgSubType = 9
	MsgSubType_EmailSecurityCodeResp      MsgSubType = 10
	MsgSubType_PhoneSecurityCodeReq       MsgSubType = 11
	MsgSubType_PhoneSecurityCodeResp      MsgSubType = 12
	MsgSubType_PhoneVerificationReq       MsgSubType = 13
	MsgSubType_PhoneVerificationResp      MsgSubType = 14
	MsgSubType_EmailVerificationReq       MsgSubType = 15
	MsgSubType_EmailVerificationResp      MsgSubType = 16
	MsgSubType_DocumentVerificationReq    MsgSubType = 17
	MsgSubType_DocumentVerificationResp   MsgSubType = 18
)

// Enum value maps for MsgSubType.
var (
	MsgSubType_name = map[int32]string{
		0:  "Unknown",
		1:  "AuthenticationReq",
		2:  "AuthenticationResp",
		3:  "AuthenticationQRResp",
		4:  "AuthenticationDeepLinkResp",
		5:  "FactReq",
		6:  "FactResp",
		7:  "FactQRResp",
		8:  "FactDeepLinkResp",
		9:  "EmailSecurityCodeReq",
		10: "EmailSecurityCodeResp",
		11: "PhoneSecurityCodeReq",
		12: "PhoneSecurityCodeResp",
		13: "PhoneVerificationReq",
		14: "PhoneVerificationResp",
		15: "EmailVerificationReq",
		16: "EmailVerificationResp",
		17: "DocumentVerificationReq",
		18: "DocumentVerificationResp",
	}
	MsgSubType_value = map[string]int32{
		"Unknown":                    0,
		"AuthenticationReq":          1,
		"AuthenticationResp":         2,
		"AuthenticationQRResp":       3,
		"AuthenticationDeepLinkResp": 4,
		"FactReq":                    5,
		"FactResp":                   6,
		"FactQRResp":                 7,
		"FactDeepLinkResp":           8,
		"EmailSecurityCodeReq":       9,
		"EmailSecurityCodeResp":      10,
		"PhoneSecurityCodeReq":       11,
		"PhoneSecurityCodeResp":      12,
		"PhoneVerificationReq":       13,
		"PhoneVerificationResp":      14,
		"EmailVerificationReq":       15,
		"EmailVerificationResp":      16,
		"DocumentVerificationReq":    17,
		"DocumentVerificationResp":   18,
	}
)

func (x MsgSubType) Enum() *MsgSubType {
	p := new(MsgSubType)
	*p = x
	return p
}

func (x MsgSubType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgSubType) Descriptor() protoreflect.EnumDescriptor {
	return file_msgtype_proto_enumTypes[1].Descriptor()
}

func (MsgSubType) Type() protoreflect.EnumType {
	return &file_msgtype_proto_enumTypes[1]
}

func (x MsgSubType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgSubType.Descriptor instead.
func (MsgSubType) EnumDescriptor() ([]byte, []int) {
	return file_msgtype_proto_rawDescGZIP(), []int{1}
}

var File_msgtype_proto protoreflect.FileDescriptor

var file_msgtype_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x6d, 0x73, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x37, 0x0a, 0x07, 0x4d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x53, 0x47, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x52, 0x52, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x41, 0x55, 0x54, 0x48, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x43, 0x4c,
	0x10, 0x04, 0x2a, 0xd2, 0x03, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0x02, 0x12, 0x18, 0x0a,
	0x14, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x52, 0x52, 0x65, 0x73, 0x70, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x65, 0x70, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x61, 0x63, 0x74, 0x51, 0x52, 0x52, 0x65, 0x73, 0x70,
	0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x61, 0x63, 0x74, 0x44, 0x65, 0x65, 0x70, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x10, 0x0a, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x10, 0x0d, 0x12, 0x19, 0x0a, 0x15,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x10,
	0x0f, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0x10, 0x12, 0x1b, 0x0a, 0x17,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x10, 0x11, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x10, 0x12, 0x42, 0x52, 0x0a, 0x17, 0x6e, 0x65, 0x74, 0x2e, 0x73,
	0x65, 0x6c, 0x66, 0x69, 0x64, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6c, 0x64, 0x67, 0x61, 0x74, 0x65, 0x2d, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2f,
	0x73, 0x65, 0x6c, 0x66, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x6d, 0x73, 0x67, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_msgtype_proto_rawDescOnce sync.Once
	file_msgtype_proto_rawDescData = file_msgtype_proto_rawDesc
)

func file_msgtype_proto_rawDescGZIP() []byte {
	file_msgtype_proto_rawDescOnce.Do(func() {
		file_msgtype_proto_rawDescData = protoimpl.X.CompressGZIP(file_msgtype_proto_rawDescData)
	})
	return file_msgtype_proto_rawDescData
}

var file_msgtype_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_msgtype_proto_goTypes = []interface{}{
	(MsgType)(0),    // 0: msgproto.MsgType
	(MsgSubType)(0), // 1: msgproto.MsgSubType
}
var file_msgtype_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_msgtype_proto_init() }
func file_msgtype_proto_init() {
	if File_msgtype_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msgtype_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msgtype_proto_goTypes,
		DependencyIndexes: file_msgtype_proto_depIdxs,
		EnumInfos:         file_msgtype_proto_enumTypes,
	}.Build()
	File_msgtype_proto = out.File
	file_msgtype_proto_rawDesc = nil
	file_msgtype_proto_goTypes = nil
	file_msgtype_proto_depIdxs = nil
}
