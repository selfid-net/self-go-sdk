// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package msgprotov2

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Notification struct {
	_tab flatbuffers.Table
}

func GetRootAsNotification(buf []byte, offset flatbuffers.UOffsetT) *Notification {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Notification{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *Notification) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Notification) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *Notification) Id() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *Notification) Msgtype() MsgType {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return MsgType(rcv._tab.GetInt8(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *Notification) MutateMsgtype(n MsgType) bool {
	return rcv._tab.MutateInt8Slot(6, int8(n))
}

func (rcv *Notification) Error() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *Notification) Errtype() ErrType {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return ErrType(rcv._tab.GetInt8(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *Notification) MutateErrtype(n ErrType) bool {
	return rcv._tab.MutateInt8Slot(10, int8(n))
}

func NotificationStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func NotificationAddId(builder *flatbuffers.Builder, id flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(id), 0)
}
func NotificationAddMsgtype(builder *flatbuffers.Builder, msgtype MsgType) {
	builder.PrependInt8Slot(1, int8(msgtype), 0)
}
func NotificationAddError(builder *flatbuffers.Builder, error flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(error), 0)
}
func NotificationAddErrtype(builder *flatbuffers.Builder, errtype ErrType) {
	builder.PrependInt8Slot(3, int8(errtype), 0)
}
func NotificationEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
